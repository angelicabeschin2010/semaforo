import RPi.GPIO as GPIO
import time
import random

# Impostazione della modalità GPIO
GPIO.setmode(GPIO.BCM)

# Definizione dei pin per i LED (rosso, giallo, verde)
LED_ROSSO = 6
LED_GIALLO = 7
LED_VERDE = 8

# Pin per il sensore ad ultrasuoni
TRIG = 10
ECHO = 9

# Impostazione dei pin come output (per i LED)
GPIO.setup(LED_ROSSO, GPIO.OUT)
GPIO.setup(LED_GIALLO, GPIO.OUT)
GPIO.setup(LED_VERDE, GPIO.OUT)

# Impostazione dei pin come input (per il sensore ultrasuoni)
GPIO.setup(TRIG, GPIO.OUT)
GPIO.setup(ECHO, GPIO.IN)


# Funzione per misurare la distanza tramite il sensore ad ultrasuoni
def misura_distanza():
    GPIO.output(TRIG, False)
    time.sleep(0.5)

    GPIO.output(TRIG, True)
    time.sleep(0.00001)
    GPIO.output(TRIG, False)

    while GPIO.input(ECHO) == 0:
        pulse_start = time.time()

    while GPIO.input(ECHO) == 1:
        pulse_end = time.time()

    pulse_duration = pulse_end - pulse_start
    distanza = pulse_duration * 17150  # Formula per calcolare la distanza in cm
    distanza = round(distanza, 2)

    return distanza


# Funzione per accendere il semaforo in base alla distanza
def semaforo():
    while True:
        distanza = misura_distanza()
        print(f"Distanza rilevata: {distanza} cm")

        # Se la distanza è minore di 10 cm, accende il verde
        if distanza < 10:
            GPIO.output(LED_VERDE, True)
            GPIO.output(LED_GIALLO, False)
            GPIO.output(LED_ROSSO, False)

        # Se la distanza è minore di 20 cm, accende il giallo
        elif distanza < 20:
            GPIO.output(LED_VERDE, False)
            GPIO.output(LED_GIALLO, True)
            GPIO.output(LED_ROSSO, False)

        # Se la distanza è minore di 30 cm, accende il rosso
        elif distanza < 30:
            GPIO.output(LED_VERDE, False)
            GPIO.output(LED_GIALLO, False)
            GPIO.output(LED_ROSSO, True)

        # Se la distanza è maggiore di 30 cm, spegne tutte le luci
        else:
            GPIO.output(LED_VERDE, False)
            GPIO.output(LED_GIALLO, False)
            GPIO.output(LED_ROSSO, False)

        time.sleep(1)


# Avvio del programma
try:
    semaforo()
except KeyboardInterrupt:
    print("Programma interrotto.")
    GPIO.cleanup()
